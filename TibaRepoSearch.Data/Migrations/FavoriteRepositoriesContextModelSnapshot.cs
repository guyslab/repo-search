// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TibaRepoSearch;

#nullable disable

namespace TibaRepoSearch.Data.Migrations
{
    [DbContext(typeof(FavoriteRepositoriesContext))]
    partial class FavoriteRepositoriesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TibaRepoSearch.FavoriteRepositoryAnalysisData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ActivityDays")
                        .HasColumnType("integer")
                        .HasColumnName("activity_days");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("DefaultBranch")
                        .HasColumnType("text")
                        .HasColumnName("default_branch");

                    b.Property<Guid>("FavoriteId")
                        .HasColumnType("uuid")
                        .HasColumnName("favorite_id");

                    b.Property<int?>("Forks")
                        .HasColumnType("integer");

                    b.Property<decimal?>("HealthScore")
                        .HasColumnType("numeric")
                        .HasColumnName("health_score");

                    b.Property<string>("License")
                        .HasColumnType("text");

                    b.Property<int?>("OpenIssues")
                        .HasColumnType("integer")
                        .HasColumnName("open_issues");

                    b.Property<string>("PrimaryLanguage")
                        .HasColumnType("text")
                        .HasColumnName("primary_language");

                    b.Property<int?>("ReadmeLength")
                        .HasColumnType("integer")
                        .HasColumnName("readme_length");

                    b.Property<int?>("StarsSnapshot")
                        .HasColumnType("integer")
                        .HasColumnName("stars_snapshot");

                    b.Property<string>("TopicsJson")
                        .HasColumnType("text")
                        .HasColumnName("topics_json");

                    b.HasKey("Id");

                    b.HasIndex("FavoriteId")
                        .IsUnique();

                    b.ToTable("favorite_repository_analysis");
                });

            modelBuilder.Entity("TibaRepoSearch.FavoriteRepositoryData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RepoId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("repo_id");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("RepoId", "UserId")
                        .IsUnique();

                    b.ToTable("favorite_repositories");
                });

            modelBuilder.Entity("TibaRepoSearch.FavoriteRepositoryAnalysisData", b =>
                {
                    b.HasOne("TibaRepoSearch.FavoriteRepositoryData", null)
                        .WithOne("Analysis")
                        .HasForeignKey("TibaRepoSearch.FavoriteRepositoryAnalysisData", "FavoriteId");
                });

            modelBuilder.Entity("TibaRepoSearch.FavoriteRepositoryData", b =>
                {
                    b.Navigation("Analysis");
                });
#pragma warning restore 612, 618
        }
    }
}
