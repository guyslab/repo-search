namespace TibaRepoSearch.Contract;

public record GitHubSearchResponse(
    int TotalCount,
    bool IncompleteResults,
    GitHubRepository[] Items);

public record GitHubRepository(
    long Id,
    string NodeId,
    string Name,
    string FullName,
    GitHubOwner Owner,
    bool Private,
    string HtmlUrl,
    string Description,
    bool Fork,
    string Url,
    DateTime CreatedAt,
    DateTime UpdatedAt,
    DateTime PushedAt,
    string GitUrl,
    string SshUrl,
    string CloneUrl,
    string SvnUrl,
    string Homepage,
    int Size,
    int StargazersCount,
    int WatchersCount,
    string Language,
    bool HasIssues,
    bool HasProjects,
    bool HasWiki,
    bool HasPages,
    bool HasDownloads,
    bool Archived,
    bool Disabled,
    int OpenIssuesCount,
    GitHubLicense License,
    bool AllowForking,
    bool IsTemplate,
    string[] Topics,
    string Visibility,
    int Forks,
    int OpenIssues,
    int Watchers,
    string DefaultBranch,
    double Score);

public record GitHubOwner(
    string Login,
    long Id,
    string NodeId,
    string AvatarUrl,
    string GravatarId,
    string Url,
    string HtmlUrl,
    string FollowersUrl,
    string FollowingUrl,
    string GistsUrl,
    string StarredUrl,
    string SubscriptionsUrl,
    string OrganizationsUrl,
    string ReposUrl,
    string EventsUrl,
    string ReceivedEventsUrl,
    string Type,
    bool SiteAdmin);

public record GitHubLicense(
    string Key,
    string Name,
    string SpdxId,
    string Url,
    string NodeId);